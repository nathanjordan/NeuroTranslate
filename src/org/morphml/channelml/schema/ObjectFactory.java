//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.09.13 at 04:28:34 PM PDT 
//


package org.morphml.channelml.schema;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.morphml.channelml.schema package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.morphml.channelml.schema
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link StdpDep }
     * 
     */
    public StdpDep createStdpDep() {
        return new StdpDep();
    }

    /**
     * Create an instance of {@link DecayingPoolModel }
     * 
     */
    public DecayingPoolModel createDecayingPoolModel() {
        return new DecayingPoolModel();
    }

    /**
     * Create an instance of {@link BlockingSynapse }
     * 
     */
    public BlockingSynapse createBlockingSynapse() {
        return new BlockingSynapse();
    }

    /**
     * Create an instance of {@link DeprecatedOhmic.Conductance }
     * 
     */
    public DeprecatedOhmic.Conductance createDeprecatedOhmicConductance() {
        return new DeprecatedOhmic.Conductance();
    }

    /**
     * Create an instance of {@link GatingComplex }
     * 
     */
    public GatingComplex createGatingComplex() {
        return new GatingComplex();
    }

    /**
     * Create an instance of {@link ConcFactor }
     * 
     */
    public ConcFactor createConcFactor() {
        return new ConcFactor();
    }

    /**
     * Create an instance of {@link DeprecatedRateConstVoltConcDep }
     * 
     */
    public DeprecatedRateConstVoltConcDep createDeprecatedRateConstVoltConcDep() {
        return new DeprecatedRateConstVoltConcDep();
    }

    /**
     * Create an instance of {@link SteadyState }
     * 
     */
    public SteadyState createSteadyState() {
        return new SteadyState();
    }

    /**
     * Create an instance of {@link Transition }
     * 
     */
    public Transition createTransition() {
        return new Transition();
    }

    /**
     * Create an instance of {@link DeprecatedGenericEquation }
     * 
     */
    public DeprecatedGenericEquation createDeprecatedGenericEquation() {
        return new DeprecatedGenericEquation();
    }

    /**
     * Create an instance of {@link CurrentVoltageRelation }
     * 
     */
    public CurrentVoltageRelation createCurrentVoltageRelation() {
        return new CurrentVoltageRelation();
    }

    /**
     * Create an instance of {@link DoubleExponentialSynapse }
     * 
     */
    public DoubleExponentialSynapse createDoubleExponentialSynapse() {
        return new DoubleExponentialSynapse();
    }

    /**
     * Create an instance of {@link ImplementationPrefs.TableSettings }
     * 
     */
    public ImplementationPrefs.TableSettings createImplementationPrefsTableSettings() {
        return new ImplementationPrefs.TableSettings();
    }

    /**
     * Create an instance of {@link MultiDecaySynapse }
     * 
     */
    public MultiDecaySynapse createMultiDecaySynapse() {
        return new MultiDecaySynapse();
    }

    /**
     * Create an instance of {@link SynapseType }
     * 
     */
    public SynapseType createSynapseType() {
        return new SynapseType();
    }

    /**
     * Create an instance of {@link PoolVolumeInfo }
     * 
     */
    public PoolVolumeInfo createPoolVolumeInfo() {
        return new PoolVolumeInfo();
    }

    /**
     * Create an instance of {@link Initialisation }
     * 
     */
    public Initialisation createInitialisation() {
        return new Initialisation();
    }

    /**
     * Create an instance of {@link IntegrateAndFire }
     * 
     */
    public IntegrateAndFire createIntegrateAndFire() {
        return new IntegrateAndFire();
    }

    /**
     * Create an instance of {@link TimeCourse }
     * 
     */
    public TimeCourse createTimeCourse() {
        return new TimeCourse();
    }

    /**
     * Create an instance of {@link IonSpecies }
     * 
     */
    public IonSpecies createIonSpecies() {
        return new IonSpecies();
    }

    /**
     * Create an instance of {@link FacDepSynapse }
     * 
     */
    public FacDepSynapse createFacDepSynapse() {
        return new FacDepSynapse();
    }

    /**
     * Create an instance of {@link DeprecatedRateConstantEqnChoice }
     * 
     */
    public DeprecatedRateConstantEqnChoice createDeprecatedRateConstantEqnChoice() {
        return new DeprecatedRateConstantEqnChoice();
    }

    /**
     * Create an instance of {@link Block }
     * 
     */
    public Block createBlock() {
        return new Block();
    }

    /**
     * Create an instance of {@link StdpSynapse }
     * 
     */
    public StdpSynapse createStdpSynapse() {
        return new StdpSynapse();
    }

    /**
     * Create an instance of {@link DeprecatedVoltageGate }
     * 
     */
    public DeprecatedVoltageGate createDeprecatedVoltageGate() {
        return new DeprecatedVoltageGate();
    }

    /**
     * Create an instance of {@link DeprecatedKSGate }
     * 
     */
    public DeprecatedKSGate createDeprecatedKSGate() {
        return new DeprecatedKSGate();
    }

    /**
     * Create an instance of {@link DeprecatedOhmic }
     * 
     */
    public DeprecatedOhmic createDeprecatedOhmic() {
        return new DeprecatedOhmic();
    }

    /**
     * Create an instance of {@link Parameter }
     * 
     */
    public Parameter createParameter() {
        return new Parameter();
    }

    /**
     * Create an instance of {@link ClosedState }
     * 
     */
    public ClosedState createClosedState() {
        return new ClosedState();
    }

    /**
     * Create an instance of {@link RateAdjustments }
     * 
     */
    public RateAdjustments createRateAdjustments() {
        return new RateAdjustments();
    }

    /**
     * Create an instance of {@link ChannelmlType }
     * 
     */
    public ChannelmlType createChannelmlType() {
        return new ChannelmlType();
    }

    /**
     * Create an instance of {@link Q10Settings }
     * 
     */
    public Q10Settings createQ10Settings() {
        return new Q10Settings();
    }

    /**
     * Create an instance of {@link ConcDependence }
     * 
     */
    public ConcDependence createConcDependence() {
        return new ConcDependence();
    }

    /**
     * Create an instance of {@link FacDep }
     * 
     */
    public FacDep createFacDep() {
        return new FacDep();
    }

    /**
     * Create an instance of {@link Offset }
     * 
     */
    public Offset createOffset() {
        return new Offset();
    }

    /**
     * Create an instance of {@link DeprecatedVoltageConcGate }
     * 
     */
    public DeprecatedVoltageConcGate createDeprecatedVoltageConcGate() {
        return new DeprecatedVoltageConcGate();
    }

    /**
     * Create an instance of {@link ChannelType }
     * 
     */
    public ChannelType createChannelType() {
        return new ChannelType();
    }

    /**
     * Create an instance of {@link ImplementationPrefs }
     * 
     */
    public ImplementationPrefs createImplementationPrefs() {
        return new ImplementationPrefs();
    }

    /**
     * Create an instance of {@link ElectricalSynapse }
     * 
     */
    public ElectricalSynapse createElectricalSynapse() {
        return new ElectricalSynapse();
    }

    /**
     * Create an instance of {@link DeprecatedIon }
     * 
     */
    public DeprecatedIon createDeprecatedIon() {
        return new DeprecatedIon();
    }

    /**
     * Create an instance of {@link Parameters }
     * 
     */
    public Parameters createParameters() {
        return new Parameters();
    }

    /**
     * Create an instance of {@link DeprecatedTransition }
     * 
     */
    public DeprecatedTransition createDeprecatedTransition() {
        return new DeprecatedTransition();
    }

    /**
     * Create an instance of {@link Gate.State }
     * 
     */
    public Gate.State createGateState() {
        return new Gate.State();
    }

    /**
     * Create an instance of {@link DeprecatedHHGate }
     * 
     */
    public DeprecatedHHGate createDeprecatedHHGate() {
        return new DeprecatedHHGate();
    }

    /**
     * Create an instance of {@link DeprecatedKSState }
     * 
     */
    public DeprecatedKSState createDeprecatedKSState() {
        return new DeprecatedKSState();
    }

    /**
     * Create an instance of {@link FixedPoolInfo }
     * 
     */
    public FixedPoolInfo createFixedPoolInfo() {
        return new FixedPoolInfo();
    }

    /**
     * Create an instance of {@link OpenState }
     * 
     */
    public OpenState createOpenState() {
        return new OpenState();
    }

    /**
     * Create an instance of {@link IonConcentration }
     * 
     */
    public IonConcentration createIonConcentration() {
        return new IonConcentration();
    }

    /**
     * Create an instance of {@link DeprecatedAkdEquation }
     * 
     */
    public DeprecatedAkdEquation createDeprecatedAkdEquation() {
        return new DeprecatedAkdEquation();
    }

    /**
     * Create an instance of {@link DeprecatedRateConstantEqn }
     * 
     */
    public DeprecatedRateConstantEqn createDeprecatedRateConstantEqn() {
        return new DeprecatedRateConstantEqn();
    }

    /**
     * Create an instance of {@link Gate }
     * 
     */
    public Gate createGate() {
        return new Gate();
    }

    /**
     * Create an instance of {@link DeprecatedParameter }
     * 
     */
    public DeprecatedParameter createDeprecatedParameter() {
        return new DeprecatedParameter();
    }

}
